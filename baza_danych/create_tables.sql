-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Entrance"
(
    entrance_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    datetime timestamp with time zone NOT NULL,
    mode character varying NOT NULL,
    justification character varying,
    "package" character varying,
    user_id integer,
    role_id integer,
    lesson_type_id integer,
    PRIMARY KEY (entrance_id)
)
WITH (
    OIDS = FALSE
);

COMMENT ON TABLE public."Entrance"
    IS 'Wejście na obiekt lub wyjście';

COMMENT ON COLUMN public."Entrance".mode
    IS '"WEJŚCIE" lub "WYJŚCIE"';

COMMENT ON COLUMN public."Entrance".justification
    IS 'uzasadnienie wejścia';

CREATE TABLE IF NOT EXISTS public."User"
(
    user_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying NOT NULL,
    surname character varying NOT NULL,
    identificator_nr character varying UNIQUE NOT NULL,
    birthdate date NOT NULL,
    sex character NOT NULL,
    phone character varying NOT NULL,
    "PESEL" character varying NOT NULL,
    street_name character varying NOT NULL,
    house_nr character varying NOT NULL,
    postal_code character varying NOT NULL,
    city character varying NOT NULL,
    e_mail character varying NOT NULL,
    additional_info character varying,
    is_active boolean NOT NULL,
    PRIMARY KEY (user_id)
)
WITH (
    OIDS = FALSE
);

COMMENT ON COLUMN public."User".identificator_nr
    IS 'unique values';

COMMENT ON COLUMN public."User".sex
    IS '"M" lub "F"';

CREATE TABLE IF NOT EXISTS public."Role"
(
    role_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    role_name character varying NOT NULL,
    is_active boolean NOT NULL,
    PRIMARY KEY (role_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE IF NOT EXISTS public."Role_User"
(
    "Role_role_id" integer NOT NULL,
    "User_user_id" integer NOT NULL
)
WITH (
    OIDS = FALSE
);

CREATE TABLE IF NOT EXISTS public."Justification"
(
    justification_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying NOT NULL,
    "from" date NOT NULL,
    "to" date NOT NULL,
    description character varying NOT NULL,
    is_active boolean NOT NULL,
    user_id integer NOT NULL,
    PRIMARY KEY (justification_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE IF NOT EXISTS public."Parameter"
(
    paramater_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying NOT NULL,
    value double precision NOT NULL,
    unit character varying NOT NULL,
    PRIMARY KEY (paramater_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE IF NOT EXISTS public."Lesson_type"
(
    lesson_type_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying NOT NULL,
    is_active boolean NOT NULL,
    PRIMARY KEY (lesson_type_id)
)
WITH (
    OIDS = FALSE
);

CREATE TABLE IF NOT EXISTS public."Lesson"
(
    lesson_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    weekday character varying NOT NULL,
    start_time time with time zone NOT NULL,
    end_time time with time zone NOT NULL,
    is_active boolean NOT NULL,
    lesson_type_id integer NOT NULL,
    PRIMARY KEY (lesson_id)
)
WITH (
    OIDS = FALSE
);

ALTER TABLE public."Entrance"
    ADD FOREIGN KEY (user_id)
    REFERENCES public."User" (user_id)
    NOT VALID;


ALTER TABLE public."Role_User"
    ADD FOREIGN KEY ("Role_role_id")
    REFERENCES public."Role" (role_id)
    NOT VALID;


ALTER TABLE public."Role_User"
    ADD FOREIGN KEY ("User_user_id")
    REFERENCES public."User" (user_id)
    NOT VALID;


ALTER TABLE public."Entrance"
    ADD FOREIGN KEY (role_id)
    REFERENCES public."Role" (role_id)
    NOT VALID;


ALTER TABLE public."Justification"
    ADD FOREIGN KEY (user_id)
    REFERENCES public."User" (user_id)
    NOT VALID;


ALTER TABLE public."Lesson"
    ADD FOREIGN KEY (lesson_type_id)
    REFERENCES public."Lesson_type" (lesson_type_id)
    NOT VALID;


ALTER TABLE public."Entrance"
    ADD FOREIGN KEY (lesson_type_id)
    REFERENCES public."Lesson_type" (lesson_type_id)
    NOT VALID;

END;